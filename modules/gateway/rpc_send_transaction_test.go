//go:build !CI

/*
 *   Copyright (c) 2024 Arcology Network

 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.

 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.

 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package gateway

import (
	_ "net/http/pprof"
	"testing"
)

func Test_SendTransaction(t *testing.T) {
	/*
		zkurl := "127.0.0.1:2181"
		xclient := rpc.InitZookeeperRpcClient("gateway", []string{zkurl})
		txDatas := []string{
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f19000000000000000000000000ab01a3bfc5de6b5fc481e18f274adbdba9b111f000000000000000000000000000000000000000000000000000000002540be40026a083c4944d94240fec7bdaa9d533b6766242fe6010355f80aa4b9c043e93e5af11a02ffd7f2fd3329718b20ae58417580825b672f74dbdec4384edab57a3f8e2d25b",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f1900000000000000000000000021522c86a586e696961b68aa39632948d9f1117000000000000000000000000000000000000000000000000000000002540be40025a0e2e05bdab570985b5adb9b57aae8afb35254406c19fd1e27cf1ec4158dc43f89a04ac347443a700da3ec8130e0635f59d7a64138b628aaa20f27bb88e34394d549",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f19000000000000000000000000a75cd05bf16bbea1759de2a66c0472131bc5bd8d00000000000000000000000000000000000000000000000000000002540be40026a05cc67d5b6915c9315e2aee0fc3fe0d44206d3848ade512b60ec80c8fbb409df2a07b70dc5c41a60a97d40e6c43d3f905e280cda7eba71b100ab4be1d0dbba464ac",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f190000000000000000000000002c7161284197e40e83b1b657e98b3bb8ff3c90ed00000000000000000000000000000000000000000000000000000002540be40025a09d236b1bd534aa087eecc0848b58209143a32818ff613aa12b58f5163f50b116a048c54b59bc01374690fc8cfde4e73ce158ae4babf0992cccba54ae73a110f04d",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f1900000000000000000000000057170608ae58b7d62dcdc3cbdb564c05ddbb7eee00000000000000000000000000000000000000000000000000000002540be40025a0f8740188f27ddcde631c1a64cfdf648ee8b3ccb89a26c29e6b0c6612bcefe3ada06eb8d7d3f3760f441d3e038e3cc6bdb4549225899bb2d57e2b55ef52f8057347",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f190000000000000000000000009f79316c20f3f83fcf43dee8a1cea185a47a5c4500000000000000000000000000000000000000000000000000000002540be40026a0af2c93a1960d7096df54058d5420bd9c7e33c09365103078dfc8883fddadea2ea0278405459916b254910323df5aee8752859a721f8727fdef2b8cc3510d28c8b9",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f190000000000000000000000009f9e0f23afd5404b34006678c900629183c9a25d00000000000000000000000000000000000000000000000000000002540be40026a0a16e4352ada9ab460a07faa3767a7c9c4fe4c7b3ecaf3d34d8ec017eec98f10aa00e529699f44e8c631eef58e6a65c4981031bf58c84c69b5dd4c08a4eee1f7576",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f19000000000000000000000000d7cb260c7658589fe68789f2d678e1e85f7e483100000000000000000000000000000000000000000000000000000002540be40026a03a45656c23932443689ed57c6ed6d45b9192f69f339e0700c91f7f1e77699ca5a0406d68cbb7f49cb13ce397c313be9d230f2d5a679e9363578fd63c027238580b",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f19000000000000000000000000230dccc4660dcbecb8a6aea1c713ee7a04b35cad00000000000000000000000000000000000000000000000000000002540be40025a066cc330147ba990810f0fd7f0acd98875722aec467ce3f0df4f01ca7757f002ba05e6f032183a4f2eda1a40d071643f0deb253087bfa8e7231459280db14afdb45",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f190000000000000000000000008aa62d370585e28fd2333325d3dbaef6112279ce00000000000000000000000000000000000000000000000000000002540be40026a00f4227a8d5a8195883655bbcc4bea7ad7880e2a84814f486290cb4afb9cf0db6a0743744fc2d63656d10addafb6927dcb4528f68902f0f356a047cad6f6d5833e1",
			"f8a780018502540be40094842d4bfdb1904503ac152483527f338cd5d9bcba80b84440c10f19000000000000000000000000c8bc50ca2443f4ce0ebf1bc9396b7f53f62e9c1300000000000000000000000000000000000000000000000000000002540be40026a09880f2c20df5323748b9aed2864a34ebae3844be4a04f124e70e3edc06ecc263a0405803cecd3986c660ce588c06ad107abf30df18272951acd14b133c34ef398c",
		}

		txWorker := func(start, end, idx int, args ...interface{}) {
			txdatas := args[0].([]interface{})[0].([]string)

			for i := start; i < end; i++ {
				txData := txdatas[i]
				tx, err := hex.DecodeString(txData)
				if err != nil {
					fmt.Printf("txdata decode err:%v\n", err)
					return
				}
				request := &types.RawTransactionArgs{
					Tx: tx,
				}
				response := types.RawTransactionReply{}
				xclient.Call(context.Background(), "SendRawTransaction", request, &response)

				fmt.Printf("response=%v\n", response.TxHash.(evmCommon.Hash))
			}
		}

		common.ParallelWorker(len(txDatas), 4, txWorker, txDatas)
	*/
}
